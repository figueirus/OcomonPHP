<?php
require_once "../../includes/include_geral.inc.php";
require_once "../../includes/include_geral_II.inc.php";
require_once "package_scripts.class";

// alteração: foi adicionado o maxlenght a classe textfield
class Form{
//var $descriptor = "function Form(\$title = '', \$action = '', \$table_width = '70%', \$onSubmit = '')";
var $descriptor = "function Form(\$title = '', \$action = '', \$table_width = '70%', \$onSubmit = '')
<BR>function setFormName(\$name)
<BR>function setFormHeigth(\$heigth)
<BR>function setFormTarget(\$target)
<BR>function setAsterisc(\$valor)
<BR>function addMessage(\$contents)
<BR>function addTitleMessage(\$contents=\"Atenção\")
<BR>function addErrorMessage(\$contents)
<BR>function setLeftColWidth(\$value)
<BR>function setFormAlign(\$value = \"CENTER\")
<BR>function setRightColWidth(\$value)
<BR>function setNoBorder()
<BR>function setNoBackground(){
<BR>function addBlockQuote(\$levels = 0)
<BR>function setOnSubmit( \$value )
<BR>function getOnSubmit()
<BR>function &GetTitle()
<BR>function SetTitle(\$title)
<BR>function SetAction(\$action)
<BR>function AddField(&\$field)
<BR>function AddButton(\$label, \$name, \$action)
<BR>function SetButtonLabel(\$index, \$label)
<BR>function SetButtonReturn()
<BR>function Generate()
<BR>function getDescriptor()";

var $title;
var $name;
var $action;
var $formTarget;
var $method;
var $elements;
var $return;
var $reset;
var $styles;
var $help;
var $footer;
var $width;
var $form_table_width;
var $form_table_heigth;
var $form_table_border;
var $form_table_cellpadding;
var $form_table_cellspacing;
var $form_table_bgcolor;
var $form_table_bgcolor2;
var $form_button_background;
var $form_button_font_color;
var $blockquote_levels;
var $type;
var $leftcolwidth;
var $rightcolwidth;
var $message;
var $errors_message;
var $errors_message_js;
var $noBorder;
var $noBackgroud;
var $enable_scripts;
var $titleMessagesError;
var $formAlign;
var $onSubmit;
var $asterisc = FALSE;
var $formUpLoad = false;
var $naoVisivelImpressao;
var $showMessageBox = true;

// constructor da classe
function Form($title = '', $action = '', $table_width = '70%', $onSubmit = '', $naoVisivelImpressao=false) {
	GLOBAL $SGU_INTERNET;
	
	//$this->form_table_bgcolor  = "#EFCE59";
	//$this->form_table_bgcolor  = "#CC9966";
	if ( $SGU_INTERNET == "SGU_ACADEMICOS" ) {
		$this->form_table_bgcolor  = "";
		$this->form_table_bgcolor2 = "";
	} else {
		$this->form_table_bgcolor  = "#000000";
		$this->form_table_bgcolor2 = "#F0F0F0";
	}
	//$this->form_table_bgcolor2 = "blue";
	//$this->form_button_background = "#E5E2D8";//CE0000
	$this->form_button_background = "#E5E2D8";
	$this->form_button_font_color = "#000000";
	$this->form_button_font_color = "#CE0000";
	$this->formTarget = "";
	$this->naoVisivelImpressao = $naoVisivelImpressao;
	$this->form_table_width = $table_width;
	$this->form_table_border = 0;
	$this->form_table_cellpadding = 0;
	$this->form_table_cellspacing = 4;
	$this->title = $title;
	$this->name = 'frm'.mt_rand(1, 40000);
	$this->action = $action;
	$this->method = 'post';
	$this->width = '100%';
	$this->buttons[] = new FormButton('Enviar', 'FORM_SUBMIT_BTN_NAME', 'SUBMIT');
	$this->return = false;
	$this->reset = false;
	$this->blockquote_levels = 0;
	$this->type = 'COMMAND';
	$this->noBorder = true;
	$this->noBackgroud = true;
	$this->errors_message = '';
	$this->errors_message_js = '';
	$this->enable_scripts = false;
	$this->titleMessagesError = "";
	$this->onSubmit = '';
	if ($onSubmit != "") $this->setOnSubmit( $onSubmit );
	$this->setFormAlign();
}



function setFormName($name) {
	$name = trim($name);
	if ( $name != "") $this->name = $name;
}

// Seta a altura do Formulário
function setFormHeigth($heigth) {
	$heigth = trim($heigth);
	if ($heigth != "") $this->form_table_heigth = $heigth;
}

function setFormTarget($target){
	$target = trim($target);
	$this->formTarget = $target;
}

function setAsterisc($valor){
	$this->asterisc = $valor;
}

//
function addMessage($contents){
	$contents=trim($contents);
	if ($contents!="") $this->message .= "<BR>".$contents;
}

function addTitleMessage($contents="Atenção"){
	$contents=trim($contents);
	$this->titleMessagesError = $contents;
}

//
function addErrorMessage($contents) {
	$contents = trim($contents);
	$fnt = "<font size=1 face=\"courier\"></font>";
	$fnt .= "<font size=2 face=\"arial\"><B></B></font>";
	$fnt .= "<font size=1 face=\"arial\"></font>";

	if ($contents != "") {
		$this->errors_message .= "<br>$fnt" . $contents;
		$contents = str_replace("<br>",'\n',$contents);
		$contents = str_replace("<BR>",'\n',$contents);
		$this->errors_message_js .= '\\n'. $contents;
	}
}

//
function setLeftColWidth($value) {
	$this->leftcolwidth = $value;
}

function setFormAlign($value = "CENTER") {
	$value = trim(strtoupper($value));
	if ( ($value=="CENTER") or ($value=="LEFT") or ($value=="RIGHT") ) {
		$this->formAlign = $value;
	} else {
		$this->formAlign = "CENTER";
	}
}

function setRightColWidth($value) {
	$this->rightcolwidth = $value;
}

//
function setNoBorder(){
	$this->noBorder = FALSE;
}

function setNoBackground(){
	$this->noBackground = FALSE;
}

function addBlockQuote($levels = 0) {
	$this->blockquote_levels = $levels;
}

function setOnSubmit( $value ) {
  $this->onSubmit = $value;
}

function getOnSubmit() {
  return $this->onSubmit;
}

// busca o titulo do form
function &GetTitle() {
	return $this->title;
}

// seta um titulo para a classe
function SetTitle($title) {
	$this->title = $title;
}

// seta a url de ação para o form
function SetAction($action) {
	$this->action = $action;
}

// adiciona um formfield ao formulario
function AddField(&$field) {
	$this->elements[] = $field;
}

// adiciona um formbutton ao formulario
function AddButton($label, $name, $action) {
	$this->elements[] = new FormButton($label, $name, $action);
}

// seta o valor do nome do botao adicionado
function SetButtonLabel($index, $label) {
	$this->elements[$index]->label = $label;
}

// seta o botao retornar
function SetButtonReturn() {
	$this->return = true;
}

function setFormUpLoad($opcao = true) {
	$this->formUpLoad = $opcao;
}

//função criada por Henrique - 20/08/2007
function setMessageBox( $opcao )
{
	$this->showMessageBox = $opcao;
}

function getCode(){
	GLOBAL $SISCONF;
	$html = "";

	$block_lev_up = "";
	$block_lev_dn = "";

	$fontStyleTitle = " font-family: Tahoma, Arial; font-size 12px ";
	$fontStyleLCol = " font-family: Tahoma, Arial; font-size 11px ";
	$fontStyleRCol = " font-family: Tahoma, Arial; font-size 11px ";

	if ($this->blockquote_levels > 0) {
		for ($i = 1;$i <= $this->blockquote_levels;$i++) {
			$block_lev_up .= "\n<BLOCKQUOTE>\n";
			$block_lev_dn .= "\n</BLOCKQUOTE>\n";
		}
	}

	/**
	* echo "$block_lev_up<table border = ".$this->form_table_border." ".
	* "width=\"".$this->form_table_width."\" ".
	* "cellpadding=\"".$this->form_table_cellpadding."0\" ".
	* "cellspacing=\"".$this->form_table_cellspacing."\">\n";
	*/

	$onSubmit = $this->onSubmit;
	if ( trim($onSubmit) != "" ) $onSubmit = " onSubmit=\"$onSubmit\" ";

	$tmpTarget = "";
	if (trim($this->formTarget)!="") {
		$tmpTarget = " TARGET=\"".$this->formTarget."\" ";
	}

	if ($this->naoVisivelImpressao===true)
	{
		$form = "<div class='naoVisivelImpressao'><FORM CLASS=cadastro";
	}
	else
	{
		$form = "<FORM CLASS=cadastro";
	}

	if ( $this->formUpLoad === true ) $form .= " enctype=\"multipart/form-data\"";
	$form .= " NAME=\"".$this->name."\" METHOD=\"".$this->method."\" ".$tmpTarget." ACTION=\"".$this->action."\" ".$onSubmit.">\n";
	$html .= $form;

	//verifica se ha borda ou nao
	if ($this->noBorder==FALSE) {
		if ($this->noBackgroud==FALSE) {
			$html .= "$block_lev_up" . "<TABLE ALIGN=".$this->formAlign." BORDER=0 CELLPADDING=3 CELLSPACING=3 ><TR><TD >" . "<table class=cadastro_borda cellpadding=0 cellspacing=0>\n";
		}else{
			//echo "$block_lev_up" . "<TABLE ALIGN=".$this->formAlign." BORDER=0 CELLPADDING=3 CELLSPACING=3 BGCOLOR=\"".$this->form_table_bgcolor."\"><TR><TD BGCOLOR=\"".$this->form_table_bgcolor2."\">" . "<table class=cadastro_borda cellpadding=0 cellspacing=0>\n";
			$html .= "$block_lev_up" . "<TABLE ALIGN=".$this->formAlign." BORDER=0 CELLPADDING=3 CELLSPACING=3 BGCOLOR=\"".$this->form_table_bgcolor."\"><TR><TD BGCOLOR=\"".$this->form_table_bgcolor2."\">" . "<table class=cadastro_borda cellpadding=0 cellspacing=0>\n";
		}
	}else{
		if ($this->noBackgroud==FALSE) {
			$html .= "$block_lev_up" . "<TABLE ALIGN=".$this->formAlign." BORDER=6 CELLPADDING=3 CELLSPACING=3 ><TR><TD >" . "<table class=cadastro_borda cellpadding=0 cellspacing=0>\n";
		}else{
			$html .= "$block_lev_up" . "<TABLE ALIGN=".$this->formAlign." BORDER=6 CELLPADDING=3 CELLSPACING=3 BGCOLOR=\"".$this->form_table_bgcolor."\"><TR><TD BGCOLOR=\"".$this->form_table_bgcolor2."\">" . "<table class=cadastro_borda cellpadding=0 cellspacing=0>\n";
		}
	}

	//echo "<TR><TD class=cadastro_cabecalho align=center ><P ALIGN=CENTER STYLE={font-size: 14px}><BR><B>" . strtoupper($this->title) . "</B></P></TD></TR>";
	$fieldsObrigatorios="";
	if ($this->title != "") {
		if ($this->asterisc==TRUE){
			$fieldsObrigatorios = "<BR><font CLASS=TITULO_OBRIGATORIO>* Dados Obrigatórios</font>";
		}

		$html .= "<TR><TD class=cadastro_cabecalho align=center ><P ALIGN=CENTER STYLE={font-size: 14px}><BR><B><LABEL CLASS='XPTITLE'>" . $this->title . "</LABEL></B>$fieldsObrigatorios</P></TD></TR>";
	}

	$showMessageBox = FALSE;
	if (trim($this->errors_message) != "") {
		$html .= "<TR><TD class=cadastro align=center>";
		$html .= "<P ALIGN=LEFT>" . "<FONT STYLE={font-size: 12px;}><B>".$this->titleMessagesError."</B></FONT>" . "<FONT STYLE={font-size: 10px;}>" . $this->errors_message . "</FONT>" . "</P>";
		$html .= "</TD></TR>";
		$showMessageBox = TRUE;
	}
	$html .= "<TR><TD class=cadastro_cabecalho align=center >";

	/*
	$onSubmit = $this->onSubmit;
	if ( trim($onSubmit) != "" ) $onSubmit = " onSubmit=\"$onSubmit\" ";

	$tmpTarget = "";
	if (trim($this->formTarget)!="") {
		$tmpTarget = " TARGET=\"".$this->formTarget."\" ";
	}

	$form = "<FORM CLASS=cadastro";
	if ( $this->formUpLoad === true ) $form .= " enctype=\"multipart/form-data\"";
	$form .= " NAME=\"".$this->name."\" METHOD=\"".$this->method."\" ".$tmpTarget." ACTION=\"".$this->action."\" ".$onSubmit.">\n";
	$html .= $form;
	*/

	if (trim($this->form_table_heigth)!="") {
		$html .= "<table class=cadastro border = " . $this->form_table_border . " " . "width=\"" . $this->form_table_width . " heigth=\"" . $this->form_table_heigth. "\" " . " style='{ height : ".$this->form_table_heigth."px }' cellpadding=\"" . $this->form_table_cellpadding . "0\" " . "cellspacing=\"" . $this->form_table_cellspacing . "\">\n";
	} else {
		$html .= "<table class=cadastro border = " . $this->form_table_border . " " . "width=\"" . $this->form_table_width . "\" " . "cellpadding=\"" . $this->form_table_cellpadding . "0\" " . "cellspacing=\"" . $this->form_table_cellspacing . "\">\n";
	}

	$hidden = null;

	$hasAsterisc = FALSE;

	if ($this->elements) {
		$html .= "\n<tr>";
		$col = 0;
		foreach ($this->elements as $f) {
			$cl = get_class($f);
			$cl = mb_strtoupper($cl);
			$f->background = $this->form_button_background;
			$f->font_color = $this->form_button_font_color;

			if ( isset($f->asterisc) ) {
				if ($f->asterisc===TRUE) $hasAsterisc =TRUE;
			}

			$col++;

			$col_with = "";
			//$col_class = " class=cadastro ".
			//" onMouseOver=\"FundoDestacado(this)\"" .
			//" onMouseOut=\"FundoNormal(this)\" ";
			$col_class = " class=cadastro ";
		if ($col == 1) {
				if (is_int($this->leftcolwidth)) {
					$col_with = " Width=" . $this->leftcolwidth;
				}
				$col_class = "class=cadastro_cabecalho";
			}else{
				$this->form_table_width = (integer) $this->form_table_width;
				if ((is_int($this->leftcolwidth)) && (is_int($this->form_table_width))){
					$col_with = " Width=" . ($this->form_table_width - $this->leftcolwidth);
				}
			}

			if ($cl == "NEWLINE") {
				$html .= "\n</tr>\n";
				$html .= $f->getCode();
				$col = 0;
			} elseif ($cl == "CLEARFIELD"){
				$html .= "<td $col_with class=cadastro_cabecalho>";
				$html .= $f->getCode();
				$html .= "</td>";
			} elseif ($cl == "TOOLBUTTON"){
				if ($f->GetClass() == "FORMBUTTON") {
					$f->background = $this->form_button_background;
					$html .= "<td $col_with class=cadastro_cabecalho>";
					$SISCONF['DEBUG']->addToDebug($f,"");
					$html .= $f->getCode();
					$html .= "</td>";
				} else {
					//echo "<td $col_with class=cadastro " . " onMouseOver=\"FundoDestacado(this)\"" . " onMouseOut=\"FundoNormal(this)\">";
					$html .= "<td $col_with class=cadastro_cabecalho >";
					$html .= $f->getCode();
					$html .= "</td>";
				}
			} else {
				//echo "<td $col_with class=cadastro_cabecalho>";
				$html .= "<td valign=top $col_with $col_class>";
				$f->background = $this->form_button_background;
				$html .= $f->getCode();
				$html .= "</td>";
			}
		}
		$html .= "</tr>";
	}

	if ($this->reset) {
		$html .= "      <input type=\"reset\">\n";
	}

	if ($this->return) {
		$html .= "      <input name=\"return\"  type=\"button\" value=\"Retornar\" onclick=\"javascript:history.back(-1)\">\n";
	}

	$html .= "</table>\n";

	if ($hidden) {
		$html .= "      <!-- START OF HIDDEN FIELDS -->\n";

		foreach ($hidden as $h) {
			$html .= "      ";
			$html .= $h->getCode();
			$html .= "\n";
		}
		$html .= "      <!-- END OF HIDDEN FIELDS -->\n";
	}

	#$html .= "</form>\n";
	$html .= "</TD></TR></TABLE>" . "</TD></TR></TABLE>" . "\n $block_lev_dn \n";

	if ($this->naoVisivelImpressao===true)
	{
		$html .= "</form></div>\n";
	}
	else
	{
		$html .= "</form>\n";
	}

	if ($showMessageBox == TRUE){
		$this->titleMessagesError = trim($this->titleMessagesError);
		$script = "<SCRIPT LANGUAGE='JavaScript'>\n";
		$script .= "<!--\n";
		if ($this->titleMessagesError==""){
			$script .= 'window.alert("'. strip_tags(str_replace("&nbsp;"," ",$this->errors_message_js)).'");'."\n";
		}else{
			$script .= 'window.alert("'. strip_tags($this->titleMessagesError).':\\n'. strip_tags(str_replace("&nbsp;"," ",$this->errors_message_js)).'");'."\n";
		}
		$script .= "-->\n";
		$script .= "</SCRIPT>\n";
		$html .= $script;
	}


	return $html;
}

// gera o codigo do form
function Generate() {
	GLOBAL $SISCONF;

	$block_lev_up = "";
	$block_lev_dn = "";

	$fontStyleTitle = " font-family: Tahoma, Arial; font-size 12px ";
	$fontStyleLCol = " font-family: Tahoma, Arial; font-size 11px ";
	$fontStyleRCol = " font-family: Tahoma, Arial; font-size 11px ";

	if ($this->blockquote_levels > 0) {
		for ($i = 1;$i <= $this->blockquote_levels;$i++) {
			$block_lev_up .= "\n<BLOCKQUOTE>\n";
			$block_lev_dn .= "\n</BLOCKQUOTE>\n";
		}
	}

	/**
	* echo "$block_lev_up<table border = ".$this->form_table_border." ".
	* "width=\"".$this->form_table_width."\" ".
	* "cellpadding=\"".$this->form_table_cellpadding."0\" ".
	* "cellspacing=\"".$this->form_table_cellspacing."\">\n";
	*/

	$onSubmit = $this->onSubmit;
	if ( trim($onSubmit) != "" ) $onSubmit = " onSubmit=\"$onSubmit\" ";

	$tmpTarget = "";
	if (trim($this->formTarget)!="") {
		$tmpTarget = " TARGET=\"".$this->formTarget."\" ";
	}

	if ($this->naoVisivelImpressao===true)
	{
		$form = "<div class='naoVisivelImpressao'><FORM CLASS=cadastro";
	}
	else
	{
		$form = "<FORM CLASS=cadastro";
	}

	if ( $this->formUpLoad === true ) $form .= " enctype=\"multipart/form-data\"";
	$form .= " NAME=\"".$this->name."\" METHOD=\"".$this->method."\" ".$tmpTarget." ACTION=\"".$this->action."\" ".$onSubmit.">\n";
	echo $form;

	//verifica se ha borda ou nao
	if ($this->noBorder==FALSE) {
		if ($this->noBackgroud==FALSE) {
			echo "$block_lev_up" . "<TABLE ALIGN=".$this->formAlign." BORDER=0 CELLPADDING=3 CELLSPACING=3 ><TR><TD >" . "<table class=cadastro_borda cellpadding=0 cellspacing=0>\n";
		}else{
			//echo "$block_lev_up" . "<TABLE ALIGN=".$this->formAlign." BORDER=0 CELLPADDING=3 CELLSPACING=3 BGCOLOR=\"".$this->form_table_bgcolor."\"><TR><TD BGCOLOR=\"".$this->form_table_bgcolor2."\">" . "<table class=cadastro_borda cellpadding=0 cellspacing=0>\n";
			echo "$block_lev_up" . "<TABLE ALIGN=".$this->formAlign." BORDER=0 CELLPADDING=3 CELLSPACING=3 BGCOLOR=\"".$this->form_table_bgcolor."\"><TR><TD BGCOLOR=\"".$this->form_table_bgcolor2."\">" . "<table class=cadastro_borda cellpadding=0 cellspacing=0>\n";
		}
	}else{
		if ($this->noBackgroud==FALSE) {
			echo "$block_lev_up" . "<TABLE ALIGN=".$this->formAlign." BORDER=6 CELLPADDING=3 CELLSPACING=3 ><TR><TD >" . "<table class=cadastro_borda cellpadding=0 cellspacing=0>\n";
		}else{
			echo "$block_lev_up" . "<TABLE ALIGN=".$this->formAlign." BORDER=6 CELLPADDING=3 CELLSPACING=3 BGCOLOR=\"".$this->form_table_bgcolor."\"><TR><TD BGCOLOR=\"".$this->form_table_bgcolor2."\">" . "<table class=cadastro_borda cellpadding=0 cellspacing=0>\n";
		}
	}

	//echo "<TR><TD class=cadastro_cabecalho align=center ><P ALIGN=CENTER STYLE={font-size: 14px}><BR><B>" . strtoupper($this->title) . "</B></P></TD></TR>";
	$fieldsObrigatorios="";
	if ($this->title != "") {
		if ($this->asterisc==TRUE){
			$fieldsObrigatorios = "<BR><font CLASS=TITULO_OBRIGATORIO>* Dados Obrigatórios</font>";
		}

		echo "<TR><TD class=cadastro_cabecalho align=center ><P ALIGN=CENTER STYLE={font-size: 14px}><BR><B><LABEL CLASS='XPTITLE'>" . $this->title . "</LABEL></B>$fieldsObrigatorios</P></TD></TR>";
	}

	$showMessageBox = FALSE;
	if (trim($this->errors_message) != "") {
		echo "<TR><TD class=cadastro align=center>";
		echo "<P ALIGN=LEFT>" . "<FONT STYLE={font-size: 12px;}><B>".$this->titleMessagesError."</B></FONT>" . "<FONT STYLE={font-size: 10px;}>" . $this->errors_message . "</FONT>" . "</P>";
		echo "</TD></TR>";
		//$showMessageBox = TRUE;
		$showMessageBox = $this->showMessageBox;
	}
	echo "<TR><TD class=cadastro_cabecalho align=center >";

	/*
	$onSubmit = $this->onSubmit;
	if ( trim($onSubmit) != "" ) $onSubmit = " onSubmit=\"$onSubmit\" ";

	$tmpTarget = "";
	if (trim($this->formTarget)!="") {
		$tmpTarget = " TARGET=\"".$this->formTarget."\" ";
	}

	$form = "<FORM CLASS=cadastro";
	if ( $this->formUpLoad === true ) $form .= " enctype=\"multipart/form-data\"";
	$form .= " NAME=\"".$this->name."\" METHOD=\"".$this->method."\" ".$tmpTarget." ACTION=\"".$this->action."\" ".$onSubmit.">\n";
	echo $form;
	*/

	if (trim($this->form_table_heigth)!="") {
		echo "<table class=cadastro border = " . $this->form_table_border . " " . "width=\"" . $this->form_table_width . " heigth=\"" . $this->form_table_heigth. "\" " . " style='{ height : ".$this->form_table_heigth."px }' cellpadding=\"" . $this->form_table_cellpadding . "0\" " . "cellspacing=\"" . $this->form_table_cellspacing . "\">\n";
	} else {
		echo "<table class=cadastro border = " . $this->form_table_border . " " . "width=\"" . $this->form_table_width . "\" " . "cellpadding=\"" . $this->form_table_cellpadding . "0\" " . "cellspacing=\"" . $this->form_table_cellspacing . "\">\n";
	}

	$hidden = null;

	$hasAsterisc = FALSE;

	if ($this->elements) {
		echo "\n<tr>";
		$col = 0;
		foreach ($this->elements as $f) {
			$cl = get_class($f);
			$cl = mb_strtoupper($cl);
			$f->background = $this->form_button_background;
			$f->font_color = $this->form_button_font_color;

			if ( isset($f->asterisc) ) {
				if ($f->asterisc===TRUE) $hasAsterisc =TRUE;
			}

			$col++;

			$col_with = "";
			//$col_class = " class=cadastro ".
			//" onMouseOver=\"FundoDestacado(this)\"" .
			//" onMouseOut=\"FundoNormal(this)\" ";
			$col_class = " class=cadastro ";
	if ($col == 1) {
				if (is_int($this->leftcolwidth)) {
					$col_with = " Width=" . $this->leftcolwidth;
				}
				$col_class = "class=cadastro_cabecalho";
			}else{
				$this->form_table_width = (integer) $this->form_table_width;
				if ((is_int($this->leftcolwidth)) && (is_int($this->form_table_width))){
					$col_with = " Width=" . ($this->form_table_width - $this->leftcolwidth);
				}
			}

			if ($cl == "NEWLINE") {
				echo "\n</tr>\n";
				$f->generate();
				$col = 0;
			} elseif ($cl == "CLEARFIELD"){
				echo "<td $col_with class=cadastro_cabecalho>";
				$f->generate();
				echo "</td>";
			} elseif ($cl == "TOOLBUTTON"){
				if ($f->GetClass() == "FORMBUTTON") {
					$f->background = $this->form_button_background;
					echo "<td $col_with class=cadastro_cabecalho>";
					$SISCONF['DEBUG']->addToDebug($f,"");
					$f->generate();
					echo "</td>";
				} else {
					//echo "<td $col_with class=cadastro " . " onMouseOver=\"FundoDestacado(this)\"" . " onMouseOut=\"FundoNormal(this)\">";
					echo "<td $col_with class=cadastro_cabecalho >";
					$f->generate();
					echo "</td>";
				}
			} else {
				//echo "<td $col_with class=cadastro_cabecalho>";
				echo "<td valign=top $col_with $col_class>";
				$f->background = $this->form_button_background;
				$f->generate();

				echo "</td>";
			}
		}
		echo "</tr>";
	}

	if ($this->reset) {
		echo "      <input type=\"reset\">\n";
	}

	if ($this->return) {
		echo "      <input name=\"return\"  type=\"button\" value=\"Retornar\" onclick=\"javascript:history.back(-1)\">\n";
	}

	echo "</table>\n";

	if ($hidden) {
		echo "      <!-- START OF HIDDEN FIELDS -->\n";

		foreach ($hidden as $h) {
			echo "      ";
			$h->Generate();
			echo "\n";
		}

		echo "      <!-- END OF HIDDEN FIELDS -->\n";
	}

	#echo "</form>\n";
	echo "</TD></TR></TABLE>" . "</TD></TR></TABLE>" . "\n $block_lev_dn \n";
	if ($this->naoVisivelImpressao===true)
	{
		echo "</form></div>\n";
	}
	else
	{
		echo "</form>\n";
	}

	if ($showMessageBox == TRUE){
		$this->titleMessagesError = trim($this->titleMessagesError);
		$script = "<SCRIPT LANGUAGE='JavaScript'>\n";
		$script .= "<!--\n";
		if ($this->titleMessagesError==""){
			$script .= 'window.alert("'. strip_tags(str_replace("&nbsp;"," ",$this->errors_message_js)).'");'."\n";
		}else{
			$script .= 'window.alert("'. strip_tags($this->titleMessagesError).':\\n'. strip_tags(str_replace("&nbsp;"," ",$this->errors_message_js)).'");'."\n";
		}
		$script .= "-->\n";
		$script .= "</SCRIPT>\n";
		$html = $script;
		echo $script;
	}

}

function getDescriptor(){
	return $this->descriptor;
}
} //fim da classe form


class DateCalendar extends FormField{

	function DateCalendar($nome, $valor, $tamanhMaximo)
		{	
			$html = "<INPUT type='text' name='$nome' value='$valor' class='data' id='i_$nome' maxlength='$tamanhMaximo' onkeyup='barra(this)'><a onclick=\"displayCalendar(document.forms[0].$nome,'dd/mm/yyyy',this)\"> "
				." <img src='../../includes/javascript/img/cal.gif' width='16' height='16' border='0'></a>";
			//$html = "<input type='text' class='data' id='i_$nome' name='$nome' value=\"".$valor."\" maxlength='".$tamanhMaximo."' ".$js."  ".($bloqueia==true?'disabled':'')."/>";
			return $html;
		}
}


class ToolButton {
var $descriptor = "function ToolButton()";
var $elements;
var $background;
var $font_color;
var $_code;

function ToolButton() {
	$this->elements = array();
	$this->_code = "";
}

function AddButton(&$new_button) {
	array_push($this->elements, $new_button);
}

function GetClass() {
	$f = $this->elements[0];
	$cl = get_class($f);
	$cl = mb_strtoupper($cl);
	return $cl;
}

function getCode() {
	GLOBAL $SISCONF;
	foreach ($this->elements as $f) {
		$f->background = $this->background;
		$f->font_color = $this->font_color;
		$this->_code .= $f->getCode();
		$SISCONF['DEBUG']->addToDebug($f,'$f');
	}
	return $this->_code;
}

function Generate() {
	GLOBAL $SISCONF;
	foreach ($this->elements as $f) {
		$f->background = $this->background;
		$f->font_color = $this->font_color;
		$f->generate();
		$SISCONF['DEBUG']->addToDebug($f,'$f');
	}
}

} //fim da classe ToolButton


//
class FormButton {
var $descriptor = "function FormButton(\$label, \$name, \$action, \$size=\"\")";
var $label;
var $name;
var $action;
var $size;
var $background;
var $font_color;
var $_code;

function FormButton($label, $name, $action, $size="") {
	$this->label = $label;
	$this->name = $name;
	$this->action = $action;
	$this->size = $size;
}

function getCode(){
	GLOBAL $SISCONF;
	$SISCONF['DEBUG']->addToDebug($this,'Formbutton');
	$bgc = "";
	$fnc = "";

	$this->_code = "";

	$class = "BUTTON";
	if ( strtoupper($this->action) == 'FILE' ) $class = "XP";

	$this->_code .= "<input CLASS=\"".$class."\" name=\"".$this->name."\"";

	if (strtoupper($this->action) == 'SUBMIT') {
		$this->_code .= "  type=\"submit\"";
	}else if (strtoupper($this->action) == 'RESET'){
		$this->_code .= "  type=\"reset\"";
	}else if (strtoupper($this->action) == 'RETURN'){
		$this->_code .= "  type=\"button\" onclick=\"javascript:history.back(-1)\"";
	}else if (strtoupper($this->action) == 'FILE'){
		$this->_code .= "  type=\"file\" size=\"".$this->size."\"";
	}else{
		$this->_code .= "  type=\"button\" onclick=\"$this->action\"";
	}

	if ($this->label) $this->_code .= "  value=\"$this->label\"";
	$this->_code .= ">\n";

	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}

function getDescriptor(){
	return $this->descriptor;
}
}


// form de insercao de imagem
class FormImage {
var $descriptor = "function FormImage(\$label, \$name, \$img)";
var $label;
var $name;
var $img;
var $background;
var $font_color;
var $_code;

function FormImage($label, $name, $img) {
	$this->label = $label;
	$this->name = $name;
	$this->img = $img;
}

function getCode() {
	$this->_code = "";
	$this->_code .= "<IMG CLASS='XP' src=\"$this->img\" border=0>";
	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}

function getDescriptor(){
	return $this->descriptor;
}
}


//
class FormField {
var $descriptor = "function FormField(\$label, \$name, \$value = null)";
var $form; // faz referencia com o objeto do form
var $label; //label do objeto
var $name; //nome do objeto no form
var $value; //valor do objeto
var $attrs; //atributos do objeto
var $background;
var $font_color;
var $estilo;
var $_code;
var $asterisc = false;
var $id="";

function FormField($label, $name, $value = null) {
		$this->label = $label;
  $this->name = $name;
  $this->value = $value;
}

function AddAttribute($value) {
	$this->attrs[] = array($value);
}

function AddStyle($estilo){
	$this->estilo = $estilo;
}

function Attributes() {
	$s='';
	if (count($this->attrs)) {
		foreach($this->attrs as $a) {
			if ($s) {
				$s .= ' ';
			}
			$s .= $a[0] . '="' . $a[1] . '"';
		}
	}
	return $s;
}

function getCode() {
	$this->_code = "";
	if ($this->label) $this->_code .= $this->value;

	$a = $this->Attributes();
	$this->_code .= "<input CLASS='XP' name=\"$this->name\" type=\"hidden\" value=\"$this->value\" $a>";

	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}

function getDescriptor(){
	return $this->descriptor;
}

}


//
class Text extends FormField {
var $descriptor = "function Text(\$content, \$asterisc=FALSE)";

function Text($content,$asterisc=FALSE) {
	$this->FormField($content, null);
	if (is_bool($asterisc)) $this->asterisc = $asterisc;
}

function getCode() {
	$ast = "";
	if ($this->asterisc===TRUE) $ast = "<font color=RED>*</FONT>";
	$this->_code = "<LABEL CLASS='XP'>{$this->label} $ast</LABEL>";
	return $this->_code;
}
function Generate() {
	echo $this->getCode();
}
}


class ClearField extends FormField {
var $descriptor = "function ClearField(\$content = \"\")";

function ClearField($content = "") {
	$this->FormField($content, null);
}

function getCode() {
	$this->_code = "<LABEL CLASS='XP'>{$this->label}</LABEL>";
	return $this->_code;
}
function Generate() {
	echo $this->getCode();
}
}


//
class TextLabel extends FormField {
var $descriptor = "function TextLabel(\$label, \$value = null)";
var $label;
var $name;
var $value;

function TextLabel($label, $value = null) {
	$this->FormField($label, null);

	$this->label = $label;
	$this->value = $value;
}

function getCode() {
	$this->_code = "<LABEL CLASS='XP'>{$this->label}</LABEL>";
	return $this->_code;
}
function Generate() {
	echo $this->getCode();
}
}


class TextField extends FormField {
var $descriptor = "function TextField(\$label, \$name, \$value = '', \$size = 10, \$obs = '', \$max = '', \$locked = false, \$js = \"\", \$disabled = \"\", , \$align=\"LEFT\", \$color='' \$id=\"\")";
var $size;
var $max;
var $type;
var $obs;
var $locked;
var $js;
var $disabled;
var $_align = '';
var $_bgcolor = '';

function TextField($label, $name, $value = '', $size = 10, $obs = '', $max = '', $locked = false, $js = "", $disabled = "", $align="LEFT", $bgcolor="", $id="") {
	$this->FormField($label, $name, $value);

	$this->size = $size;
	$this->max = $max;
	$this->type = $size ? 'text' : 'hidden';
	$this->obs = $obs;
	$this->locked = $locked;
	$this->js = $js;
	$this->disabled = $disabled;
	$this->setAlign($align);
	$this->_bgcolor = trim($bgcolor);
	$this->id = $id;
}

function setAlign($align){
	$align = trim(strtoupper($align));
	switch ($align){
	case 'LEFT': $this->_align = 'LEFT'; break;
	case 'RIGHT': $this->_align = 'RIGHT'; break;
	case 'CENTER': $this->_align = 'CENTER'; break;
	default : $this->_align = 'LEFT'; break;
	}
}


function getCode() {
	$this->_code = "";
	// if ($this->label && $this->type == 'hidden') $this->_code .=  $this->value;

	$bgcolor = ( $this->_bgcolor != "" ? " background-color:".$this->_bgcolor.";" : "");

	if ( trim($this->id) =="" )
	{
		$this->id = "i_".$this->name;
	}

	$this->_code .= "<input id=\"".$this->id."\" name=\"$this->name\" type=\"$this->type\" value=\"".htmlentities($this->value)."\"";
	if ($this->locked == true) $this->_code .= " READONLY CLASS='XPLOCK' ";
	else $this->_code .= " CLASS='XP' ";

	// size
	if ($this->type == 'text' && $this->size) $this->_code .= " size=\"$this->size\"";
	if ($this->type == 'password' && $this->size) $this->_code .= " size=\"$this->size\"";

	// max lenght
	if ($this->type == 'text' && $this->max) $this->_code .= " maxlength=\"$this->max\"";
	if ($this->type == 'password' && $this->max) $this->_code .= " maxlength=\"$this->max\"";

	// javaScript
	if ( $this->js != "" ) $this->_code .= " ".$this->js;

	// disabled
	if ( $this->disabled == true ) $this->_code .= " DISABLED=true ";

	$this->_code .= " STYLE='{text-align: ".$this->_align."; $bgcolor}'> $this->obs\n";

	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}
}


//
class TextHidden extends TextField {
var $descriptor = "function TextHidden(\$label, \$name, \$value = '')";
function TextHidden($label, $name, $value = '') {
	$this->TextField($label, $name, $value, $size = '');
	$this->type = 'hidden';
}
}


//
class PasswordField extends TextField {
var $descriptor = "function PasswordField(\$label, \$name, \$value, \$size = 10, \$max = '')";
function PasswordField($label, $name, $value, $size = 10, $max = '') {
	$this->TextField($label, $name, $value, $size);
	$this->type = 'password';
	$this->max = $max;
}
}


//
class TextArea extends FormField {
var $descriptor = "function TextArea(\$label, \$name, \$value, \$cols = 40, \$rows = 5, \$locked = false, \$id = \"\", \$disabled = false)";
var $rows;
var $cols;
var $lock;
var $disabled;

function TextArea($label, $name, $value, $cols = 40, $rows = 5, $locked = false, $id="", $disabled = false) {
	$this->FormField($label, $name, $value);
	$this->lock = $locked;

	$this->rows = $rows;
	$this->cols = $cols;
	$this->id = $id;
	$this->disabled = $disabled;
}

function getCode() {

	if ( trim($this->id) =="" )
	{
		$this->id = "i_".$this->name;
	}

	$this->_code = "";
	if ($this->lock)    $this->_code .= "<textarea id='".$this->id."' CLASS='XPLOCK' name=\"$this->name\" rows=\"$this->rows\" cols=\"$this->cols\" readonly>$this->value</textarea>";
	elseif ($this->disabled)    $this->_code .= "<textarea id='".$this->id."' CLASS='XP' name=\"$this->name\" rows=\"$this->rows\" cols=\"$this->cols\" disabled>$this->value</textarea>";
	else    $this->_code .= "<textarea id='".$this->id."' CLASS='XP' name=\"$this->name\" rows=\"$this->rows\" cols=\"$this->cols\" >$this->value</textarea>";
	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}
}


class NewLine extends FormField {
var $descriptor = "function NewLine(\$label = \"\", \$name = \"\")";

function NewLine($label = "", $name = "") {
	$this->FormField($label, $name);
}

function getCode() {
	$this->_code = "";
	//$this->_code .= $this->value;
	return $this->_code;
}
function Generate() {
	echo $this->getCode();
}
}

//
class CheckBox extends FormField {
var $descriptor = "function CheckBox(\$label, \$name, \$value, \$checked = false, \$text = null, \$js = '', \$disable = false) ";
var $checked;
var $text;
var $js;
var $disable;

function CheckBox($label, $name, $value, $checked = false, $text = null, $js = '', $disable = false,$id="") {
	$this->FormField($label, $name, $value);

	$this->checked = $checked;
	$this->text = $text;
	$this->js = $js;
	$this->disable = $disable;
	$this->id = $id;
}

function getCode() {
	if ($this->id !="") {
		$id = $this->id;
	} else {
		$id = $this->name.$this->value;
	}

	$this->_code = "<input id=\"".$id."\" CLASS=\"IGNORE\" name=\"".$this->name."\" type=\"checkbox\" value=\"".$this->value."\"";
	if ($this->checked) $this->_code .= " checked";
	if ( $this->js != "" ) $this->_code .= " ".$this->js;
	if ( $this->disable == true ) $this->_code .= " DISABLED=\"".$this->disable."\"";
	$this->_code .= '>';

	#if ($this->text) $this->_code .= '&nbsp;' . $this->text;
	if ($this->text) $this->_code .= "&nbsp;<LABEL FOR=".$id.">".$this->text."</LABEL>";

	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}
}
//

class RadioButton extends FormField{
var $descriptor = "function RadioButton(\$label, \$name, \$value, \$checked = false, \$text, \$js = '', \$disable = false)";
var $checked;
var $text;
var $js;
var $disable;

function RadioButton($label, $name, $value, $checked = false, $text, $js = '', $disable = false) {
	$this->FormField($label, $name, $value);

	$this->checked = $checked;
	$this->text = $text;
	$this->js = $js;
	$this->disable = $disable;
}

function getCode() {
	$id = "\"".$this->name.$this->value."\"";
	$this->_code = "";
	$this->_code .= "<input ID=".$id." CLASS='IGNORE' name=\"{$this->name}\" type=\"radio\" value=\"{$this->value}\" ".$this->js."";
	if ($this->checked) $this->_code .= ' checked';
	if ($this->disable == true) $this->_code .= ' disabled = true';

	$this->_code .= '>';

	if ($this->text) $this->_code .= "&nbsp;<LABEL FOR=".$id.">".$this->text."</LABEL>";
	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}
}


class Separator extends FormField {
var $descriptor = "function Separator(\$label = null) ";
function Separator($label = null) {
	$this->FormField($label, null);
}

function getCode() {
	$this->_code = "";
	$this->_code .= "<br><b><LABEL CLASS='XP'>{$this->label}</LABEL></b>";
	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}
}


//
class LookupField extends FormField {
var $descriptor = "function LookupField(\$label, \$name, \$form, \$module, \$item, \$value = '')";
var $action;
var $form;
var $module;
var $item;
var $info;

function LookupField($label, $name, $form, $module, $item, $value = '') {
	$this->FormField($label, $name, $value);
	$this->form = $form;
	$this->module = $module;
	$this->item = $item;
}

function getCode() {
	$this->_code = "";

	$actionLU = "module={$this->module}"."&action=lookup" . "&item={$this->item}".
			"&lookup_form={$this->form->name}"."&lookup_field={$this->name}"."&lookup_text={$this->name}_text";

	$actionAC = "module={$this->module}"."&action=autocomplete"."&item={$this->item}";


	$this->_code .= "<table cellspacing=\"0\" cellpadding=\"0\" border=\"0\">\n";
	$this->_code .= "  <tr>\n";
	$this->_code .= "    <td>\n";
	$this->_code .= "      <input CLASS='XP' name=\"{$this->name}\" type=\"text\" size=\"8\" " . " onBlur=\"AutoComplete('$actionAC'," .
			"document.{$this->form->name}.{$this->name}," . "document.{$this->form->name}.{$this->name}_text)\" " . "value=\"$this->value\">\n";
	$this->_code .= "    </td>\n";
	$this->_code .= "    <td>\n";
	$this->_code .= "      &nbsp;&nbsp;<input CLASS='XP' name=\"{$this->name}_text\" " . "type=\"text\" size=\"30\" value=\"$this->info\">\n";
	$this->_code .= "    </td>\n";
	$this->_code .= "    <td>\n";
	$this->_code .= "      &nbsp;<input CLASS='XP' type=\"button\" value=\"...\" " . "onClick=\"Lookup('$actionLU')\">\n";
	$this->_code .= "    </td>\n";
	$this->_code .= "  </tr>\n";
	$this->_code .= "</table>\n";

	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}

}

//DESENV
//classe new combo
class comboBoxNew extends FormField {
var $descriptor = "function ComboBoxNew(\$label, \$name, \$value, \$options, \$selecione = 'Selecione',\$multiplo=false, \$size ='')";
var $options;
var $multiplo;
var $size;

function ComboBoxNew($label, $name, $value, $options, $selecione = 'Selecione',$multiplo=false,$size ='',$js="") {
	$this->FormField($label, $name, $value);
	//Parametros adicionados por Cássius Paim Dia 29/12/2003
	//$multiplo
	//$size

	$this->multiplo = $multiplo;
	$this->size = $size;
	$this->js = $js;
	$this->options = $options;
	@reset($this->options);
	$o = @current($this->options);

	// array multi-dimensional (result from db query)
	if (is_array($o)) {
		$default = array('', $selecione);

		$this->options = array_merge(array($default), $this->options);
	} else {
		if ($this->size ==''){
		  // simple array
			$default = array('' => $selecione);
		  $this->options = array_merge($default, $this->options);
		}
	}
}

function getCode()
{
//echo "<select name=\"{$this->name}\"" . " onChange=\"ComboBox_onSelectionChange('{$this->label}',this.form.elements['{$this->name}_sel'],this.form.elements['{$this->name}'])\"> \n";
	if ($this->multiplo == true){
		$atributoMultiplo ='multiple';
	} else {
		$atributoMultiplo ='';
	}

	if ($this->size !=''){
		$atributoSize ='size = '.$this->size ;
		$script = '';
	} else {
		$atributoSize ='';
		$script = " onChange=\"ComboBox_onSelectionChange('{$this->label}',this.form.elements['{$this->name}'],this.form.elements['{$this->name}'])\"";
	}
	$ret ="";
	$id = "i_".$this->name;
	$ret = "<select CLASS='XP' id=\"".$id."\" name=\"{$this->name}\" " .$atributoMultiplo ." " .$atributoSize . " " . $script ;
	if ( $this->js != "" ) {$ret .= $this->js;}
	$ret .= "> \n";
	foreach(array_keys($this->options) as $k) {
		$o = $this->options[$k];

		if (is_array($o)){
			list ($id, $name) = $o;

			if (strlen($name) > 40) {
				$name = substr($name, 0, 37) . '...';
			}

			if (is_array($this->value)){
				foreach($this->value as $key){
					$ret .= "<option value=\"$id\"";
					if ($key == $id){
						$ret .= ' selected';
					}
				}
				reset($this->value);
			}else{
				$ret .= "<option value=\"$id\"";
				if ("$id" == "{$this->value}") {
					$ret .= ' selected';
				}
			}

			$ret .= ">$name</option>\n";
		} else {
			$ret .= "<option value=\"$k\"";

			if ("$k" == "{$this->value}") {
				$ret .= ' selected';
			}

			$ret .= ">$o</option>\n";
		}
	}

	$ret .= "</select>\n";
	return $ret;
}

function Generate() {
	echo $this->getCode();
}
}


class ComboBox extends FormField {

var $descriptor = "function ComboBox(\$label, \$name, \$value, \$options, \$selecione = 'Selecione', \$disable = false, \$js = '', \$id = '',\$agrupar = false) ";
var $options;
var $js;
var $disable;
var $agrupar;


function ComboBox($label, $name, $value, $options, $selecione = 'Selecione', $disable = false, $js = '', $id="",$agrupar = false) {


	$this->FormField($label, $name, $value);
	if(isset($disable)){$this->disable = $disable;}
	#$this->disable = $disable;
	if(isset($js)){$this->js = $js;}
	#$this->js = $js;
	if(isset($options)){
		$this->options = $options;
	}else{
		$this->options = array();
	}
	@reset($this->options);
	$o = @current($this->options);
	if(isset($id)){$this->id = $id;}
	#$this->id = $id;
	if(isset($agrupar)){$this->agrupar = $agrupar;}

	//verifica se eh necessario colocar o selecione
	if (!empty($selecione)) {
		// array multi-dimensional (result from db query)
		if (is_array($o)) {
			$default = array('', $selecione);
			$this->options = array_merge(array($default), $this->options);
		} else {
			// simple array
			$default = array('' => $selecione);
			$this->options = array_merge($default, $this->options);
		}
	}
}

function getCode(){
	#echo "<br>n=".$this->name ;
	#echo "<br>s=".$this->selecione;
	$this->_code = "";

	if ( trim($this->id) =="" )
	{
		$this->id = "i_".$this->name;
	}

	$this->_code .= "\n<select id='".$this->id."' CLASS='XP' name=\"{$this->name}\"";
	if ( $this->js != "") $this->_code .= " ".$this->js;
	if ( $this->disable == true ) $this->_code .= " disabled=true";
	if ( trim($this->estilo) !="" ) $this->_code .= " ".$this->estilo;
	$this->_code .= ">\n";
	
	if($this->agrupar == false){
		foreach(array_keys($this->options) as $k) {
			$o = $this->options[$k];
			
			if (is_array($o)) {
				list ($id, $name) = $o;
				if (strlen($name) > 40) $name = substr($name, 0, 37) . '...';
				$this->_code .= "<option value=\"$id\"";
				if ("$id" == "{$this->value}") $this->_code .= ' selected';
				$this->_code .= ">$name</option>\n";
			} else {
				$this->_code .= "<option value=\"$k\"";
				if ("$k" == "{$this->value}") $this->_code .= ' selected';
				$this->_code .= ">$o</option>\n";
			}
		}
	} else {
		foreach($this->options as $chave => $valor) {
		if($chave == '0'){
			$this->_code .= "<option value=\"\"";
			if ("$id" == "{$this->value}") $this->_code .= ' selected';
			$this->_code .= ">$valor[1]</option>\n";
		} else {
			$this->_code .= "<OPTGROUP label=\"$chave\">";
			foreach($valor as $id =>$dados) {
				$this->_code .= "<option value=\"$id\"";
				if ("$id" == "{$this->value}") $this->_code .= ' selected';
				$this->_code .= ">$dados</option>\n";
			}
				$this->_code .= " </OPTGROUP>\n";
		}	
	 }
	
	}
	$this->_code .= "</select>\n";
	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}
}


//
class Lookup extends FormField{
var $descriptor = "function Lookup(\$label, \$name, &\$db, \$sql, \$value)";
var $keys;

function Lookup($label, $name, &$db, $sql, $value) {
	$q = new genericQuery($db);
	$q->query($sql);

	$this->FormField($label, $name);
	while ($rw = $q->fetchrow()) {
		$this->keys[] = $rw[$value];
	}
}

function getCode(){
	$this->_code = "";
	$this->_code .= "<select CLASS='XP' name = \"$this->name\">";
	foreach(array_keys($this->keys) as $k){
		$l = $this->keys[$k];

		if (is_array($l)) {
			list ($id, $name) = $l;
			if (strlen($name) > 40) $name = substr($name, 0, 37) . '...';
			$this->_code .= "<option value=\"$id\"";
			if ("$id" == "{$this->keys}") $this->_code .= ' selected';
			$this->_code .= ">$name</option>\n";
		} else {
			$this->_code .= "<option value=\"$k\"";
			if ("$k" == "{$this->keys}") $this->_code .= ' selected';
			$this->_code .= ">$l</option>\n";
		}
	}
	$this->_code .= "</select>\n";
	return $this->_code;
}

function Generate() {
	echo $this->getCode();
}
}


class radio extends FormField {
var $descriptor = "function radio(\$label, \$name, \$value, \$checked = false, \$text = null)";
var $checked;
var $text;

function radio($label, $name, $value, $checked = false, $text = null) {
	$this->FormField($label, $name, $value);

	$this->checked = $checked;
	$this->text = $text;
}

function Generate() {
	echo "<input CLASS='IGNORE' name=\"{$this->name}\" type=\"radio\" value=\"{$this->value}\"";

	if ($this->checked) {
		echo ' checked';
	}
	echo '>';

	if ($this->text) {
		echo '&nbsp;' . $this->text;
	}
}
}


class comboDBNew extends comboDB {
var $descriptor = "function ComboDBNew(\$label, \$name, \$value, \$qry, \$chave, \$valor, \$selecione = 'Selecione')";
var $options;

function ComboDBNew($label, $name, $value, $qry, $chave, $valor,$selecione = 'Selecione') {
	$this->FormField($label, $name, $value);

	//monta um array com os valores da query
	while ($rw = $qry->fetchrow()) {
		$this->options[$rw[$chave]] = $rw[$valor];

	}


	// simple array
	$default = array('' => $selecione);
	$this->options = array_merge($default, $this->options);
	return $this->options;

}
}

// classe que monta um combo a partir de um QUERY passado por parâmetro
class comboDB extends ComboBox {
var $descriptor = "function comboDB(\$name, &\$qry, \$value, \$campoChave, \$campoValor, \$selecione='selecione', \$js='')";
var $options;

function comboDB($name, &$qry, $value, $campoChave, $campoValor, $selecione='selecione', $js='') {
	if(isset($js)){$this->js = $js;}

	if(isset($options)){
		$this->options = $options;
	}else{
		$this->options = array();
	}
	@reset($this->options);
	$o = @current($this->options);
	
	$this->name = $name;
	$this->value = $value;
	$this->label = $name;



	$default = array('', $selecione);
	$this->options = array_merge(array($default), $this->options);

	if ($selecione=='selecione') {
		$this->options = array();
	}


	while ($rw = $qry->fetchrow()) {
		$campo = 0;
		$this->options[$rw[$campoChave]] = $rw[$campoValor];
	}

	//return $this->options;
}
}

class fieldSet{
var $alinhamentoHorizontal;
var $alinhamentoVertical;
var $titulo;
var $conteudo;
var $largura;
var $altura;
var $mostrarAsterisco;
var $textoInformativo;
function fieldSet($conteudo, $altura, $largura, $titulo="", $alinhamentoHorizontal="center", $alinhamentoVertical="center", $mostrarAsterisco=false, $textoInformativo=""){
	$this->alinhamentoHorizontal = $alinhamentoHorizontal;
	$this->alinhamentoVertical = $alinhamentoVertical;
	$this->largura = $largura;
	$this->altura = $altura;
	$this->titulo = $titulo;
	$this->conteudo = $conteudo;
	$this->mostrarAsterisco = $mostrarAsterisco;
	$this->textoInformativo = $textoInformativo;
}

function getCode(){
	$objText = new Text($this->titulo, $this->mostrarAsterisco);
	$html = ""
	."<fieldset title=\"".$this->textoInformativo."\" style=\"height: ".$this->altura."; width:".$this->largura.";\">"
		."<legend>".$objText->getCode()."</legend>"
		."<div style=\"width:100%; height: 100%; vertical-align:".$this->alinhamentoVertical."; "
			."text-align:".$this->alinhamentoHorizontal.";\">".$this->conteudo."</div>"
	."</fieldset>";
	return $html;
}
function Generate(){
	echo $this->getCode();
}
}

class seletorAno
{
var $nome;
var $ano;
var $anoInicial;
var $mostrarScript;
var $disabled;
var $js;
var $onClick;
var $submete;
var $_code;
var $descriptor;

function seletorAno($nome, $ano, $anoInicial = "", $mostrarScript = true, $disabled = false, $js = "", $onClick = "", $submete = false)
{
	$this->descriptor = "function seletorAno(\$nome, \$ano, \$anoInicial, \$mostrarScript = true, \$disabled = false, \$js = \"\", \$onClick = \"\", \$submete = false)";
	$this->nome = $nome;
	$this->ano = $ano;
	$this->anoInicial = $anoInicial;
	$this->disabled = $disabled;
	$this->js = $js;
	$this->onClick = $onClick;
	$this->submete = $submete;
	$this->mostrarScript = $mostrarScript;

	$script = new JavaScripts();

	if ($this->mostrarScript == true) echo $script->scriptSeletorAno();
	if ($this->anoInicial == "") $this->anoInicial = date("Y");
	if ($this->ano == "") $this->ano = $this->anoInicial;
	if ($this->submete === true) $this->submete = 1; else $this->submete = 0;
	if ($this->onClick != "") $this->onClick = ", ".$this->onClick;
	if ($this->disabled === true) $this->disabled = "disabled";
	$this->_code = "";
}

function getCode()
{
	$this->_code = "
	<table border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td rowspan=2 align=center valign=top CLASS=mostraCorFundo>
				<input type=\"text\" class='XP' id=\"i_".$this->nome."\" name=".$this->nome." size=4 maxlength=4 readonly value=\"".$this->ano."\" style=\"{border:0px; color:#; text-align:center; background-color: transparent; font-size:18}\">
			</td>

			<td CLASS=mostraCorFundo>
					<input type=\"button\" name=\"".$this->nome."BtMais\" ".$this->js." ".$this->disabled." OnClick=\"mudarAno('mais','i_".$this->nome."', ".$this->submete.")".$this->onClick.";\" style=\"{height:12px; width:16px; background-image:url(../../imagens/setaPraCima2.gif); background-position: center; background-repeat:no-repeat;}\" >
			</td>
		<tr>
			<td CLASS=mostraCorFundo>
				<input type = \"button\" name=\"".$this->nome."BtMenos\" ".$this->js." ".$this->disabled." OnClick=\"mudarAno('menos','i_".$this->nome."', ".$this->submete.")".$this->onClick.";\" style=\"{height:12px; width:16px; background-image:url(../../imagens/setaPraBaixo2.gif); background-position: center; background-repeat:no-repeat;}\">
			</td>
		</tr>
	</table>";
	return $this->_code;
}

function Generate()
{
	echo $this->getCode();
}

function getDescriptor()
{
	return $this->descriptor;
}

}


class seletorMes
{
var $nome;
var $mes;
var $mesInicial;
var $mostrarScript;
var $disabled;
var $js;
var $onClick;
var $submete;
var $_code;
var $descriptor;

function seletorMes($nome, $mes, $mesInicial, $mostrarScript = true, $disabled = false, $js = "", $onClick = "", $submete = false)
{
	$this->descriptor = "function seletorMes(\$nome, \$mes, \$mesInicial, \$mostrarScript = true, \$disabled = false, \$js = \"\", \$onClick = \"\", \$submete = false)";
	$this->nome = $nome;
	$this->mes = $mes;
	$this->mesInicial = $mesInicial;
	$this->disabled = $disabled;
	$this->js = $js;
	$this->onClick = $onClick;
	$this->submete = $submete;
	$this->mostrarScript = $mostrarScript;

	$script = new JavaScripts();

	if ($this->mostrarScript == true) {
		echo $script->scriptSeletorMes();
	}
	if ($this->mesInicial == "") {
		$this->mesInicial = date("n");
	}
	if ($this->mes == "") {
		$this->mes = $this->mesInicial;
	}
	if ($this->submete === true) {
		$this->submete = 1;
	}else{
		$this->submete = 0;
	}

	if ($this->onClick != "") {
		$this->onClick = ", ".$this->onClick;
	}
	if ($this->disabled === true) {
		$this->disabled = "disabled";
	}
	$this->_code = "";


}

function getCode()
{
	$this->_code = "
	<table border=0 cellpadding=0 cellspacing=0>
		<tr>
			<td rowspan=2 align=center valign=top CLASS=mostraCorFundo>
				<input type=\"text\" id=\"i_".$this->nome."\" class='XP' name=".$this->nome." size=4 maxlength=4 readonly value=\"".$this->mes."\" style=\"{border:0px; color:#; text-align:center; background-color: transparent; font-size:18}\">
			</td>

			<td CLASS=mostraCorFundo>
					<input type=\"button\" name=\"".$this->nome."BtMais\" ".$this->js." ".$this->disabled." OnClick=\"mudarMes('mais','i_".$this->nome."', ".$this->submete.")".$this->onClick.";\" style=\"{height:12px; width:16px; background-image:url(../../imagens/setaPraCima2.gif); background-position: center; background-repeat:no-repeat;}\" >
			</td>
		<tr>
			<td CLASS=mostraCorFundo>
				<input type = \"button\" name=\"".$this->nome."BtMenos\" ".$this->js." ".$this->disabled." OnClick=\"mudarMes('menos','i_".$this->nome."', ".$this->submete.")".$this->onClick.";\" style=\"{height:12px; width:16px; background-image:url(../../imagens/setaPraBaixo2.gif); background-position: center; background-repeat:no-repeat;}\">
			</td>
		</tr>
	</table>";
	return $this->_code;
}

function Generate()
{
	echo $this->getCode();
}

function getDescriptor()
{
	return $this->descriptor;
}

}

class TextData extends FormField
{
var $descriptor = "function TextData(\$label, \$name, \$value = '', \$obs = '', \$locked = false, \$js = \"\", \$disabled = \"\", \$onKeyUp=\"\", \$habValJs = true, \$habBotCalendar = true, \$align=\"LEFT\", \$color='' \$id=\"\")";
var $max;
var $obs;
var $locked;
var $js;
var $disabled;
var $onKeyUp;
var $habValJs;
var $habBotCalendar;
var $_align = '';
var $_bgcolor = '';
var $id = '';

function TextData($label, $name, $value = '', $size = 8, $obs = '', $locked = false, $js = "", $disabled = "", $onKeyUp="", $habValJs=true, $habBotCalendar=true, $align="LEFT", $bgcolor="", $id="")
{
	$this->FormField($label, $name, $value);

	$this->size = $size;
	$this->obs = $obs;
	$this->locked = $locked;
	$this->js = $js;
	$this->disabled = $disabled;
	$this->onKeyUp = $onKeyUp;
	$this->habValJs = $habValJs;
	$this->habBotCalendar = $habBotCalendar;
	$this->setAlign($align);
	$this->_bgcolor = trim($bgcolor);
	$this->id = $id;
}

function setAlign($align)
{
	$align = trim(strtoupper($align));
	switch ($align){
		case 'LEFT': $this->_align = 'LEFT'; break;
		case 'RIGHT': $this->_align = 'RIGHT'; break;
		case 'CENTER': $this->_align = 'CENTER'; break;
		default : $this->_align = 'LEFT'; break;
	}
}

function getCode()
{
	GLOBAL $SISCONF;
	$this->_code = "";

	if ( $this->habBotCalendar == true ) {
		//$this->_code .= "\n<link rel=\"stylesheet\" href=\"../../jsCalendario/dhtmlgoodies_calendar.css?random=20051112\" media=\"screen\"></LINK>";
		//$this->_code .= "\n<SCRIPT type=\"text/javascript\" src=\"../../jsCalendario/dhtmlgoodies_calendar.js?random=20060118\"></script>";
	}

	if ( $this->habValJs == true ) {
		//$this->_code .= "\n<SCRIPT type=\"text/javascript\" src=\"../../jsCalendario/validaData.js\"></script>\n";
	}

	$bgcolor = ( $this->_bgcolor != "" ? " background-color:".$this->_bgcolor.";" : "");
	if ( trim($this->id) == "" ) $this->id = "i_".$this->name;

	$this->_code .=
	"<input id=\"".$this->id."\" name=\"".$this->name."\" type=\"text\" value=\"".htmlentities($this->value)."\"";
	if ($this->locked == true) $this->_code .= " READONLY CLASS='XPLOCK' ";
	else $this->_code .= " CLASS='XP' ";

	// size
	if ($this->size != "") $this->_code .= " size=\"".$this->size."\"";

	// max lenght
	$this->_code .= " maxlength=\"10\"";

	// javaScript
	if ( $this->js != "" ) $this->_code .= " ".$this->js;

	$js = "";
	if ( $this->habValJs == true)
		$js = " onKeyUp=\"validaData( event, '".$this->id."' ); ";

	if ( ( $js != "") and ($this->onKeyUp != "" ) ) {
		$js .= $this->onKeyUp."\" ";
	} elseif ( ( $js == "") and ($this->onKeyUp != "" ) ) {
		$js .= "onKeyUp=\"".$this->onKeyUp."\"";
	} else {
		$js .= "\" ";
	}

	$this->_code .= $js;
	// disabled
	if ( $this->disabled == true ) $this->_code .= " DISABLED=true ";

	$this->_code .= " STYLE='{text-align: ".$this->_align."; ".$bgcolor."}'> ";

	//calendario
	if ( $this->habBotCalendar ===  true ) {
		$this->_code .= "<IMG SRC=\"".$SISCONF['SIS']['COMUM']['IMAGENS']."calendar.jpg\" title='Seleciona uma Data' STYLE=\"{cursor:pointer;}\" onclick=displayCalendar(document.getElementById(\"".$this->id."\"),'dd/mm/yyyy',this)>";
	}

	// obs
	$this->_code .= " ".$this->obs."\n";

	return $this->_code;
}

function Generate()
{
	echo $this->getCode();
}
}

class TextValor extends FormField
{
var $descriptor = "function TextValor(\$label, \$name, \$value = '', \$obs = '', \$locked = false, \$js = \"\", \$disabled = \"\" \$align=\"LEFT\", \$color='' \$id=\"\")";
var $max;
var $obs;
var $locked;
var $js;
var $disabled;    
var $_align = '';
var $_bgcolor = '';
var $id = '';

function TextValor($param)
{
	$this->FormField($param["LABEL"]="", $param["NAME"], $param["VALUE"]);

	$this->size = $param["SIZE"];
	$this->obs = $param["OBS"];
	$this->locked = $param["LOCKED"];
	$this->js = $param["JS"];
	$this->disabled = $param["DISABLED"];
	$this->setAlign($param["ALIGN"]);
	$this->_bgcolor = trim($param["BGCOLOR"]);
	$this->id = $param["ID"];
	$this->maxLength = $param["MAXLENGTH"];
	// $this->lerJs = $param["LERJS"];
}

function setAlign($align)
{
	$align = trim(strtoupper($align));
	switch ($align){
		case 'LEFT': $this->_align = 'LEFT'; break;
		case 'RIGHT': $this->_align = 'RIGHT'; break;
		case 'CENTER': $this->_align = 'CENTER'; break;
		default : $this->_align = 'LEFT'; break;
	}
}

function getCode()
{
	GLOBAL $SISCONF;
	$this->_code = "";		
	
	// if( $this->lerJs ==  true) {
		// $this->_code .= "\n<script type=\"text/javascript\" src=\"../../arquivosJS/funcoes.js\"></script>\n";
	// }
	
	$bgcolor = ( $this->_bgcolor != "" ? " background-color:".$this->_bgcolor.";" : "");
	if ( trim($this->id) == "" ) $this->id = "i_".$this->name;

	$this->_code .=
	"<input id=\"".$this->id."\" name=\"".$this->name."\" type=\"text\" value=\"".htmlentities($this->value)."\"";
	if ($this->locked == true) $this->_code .= " READONLY CLASS='XPLOCK' ";
	else $this->_code .= " CLASS='XP' ";

	// size
	if ($this->size != "") $this->_code .= " size=\"".$this->size."\"";

	// max lenght
	$this->_code .= " maxlength=\"".$this->maxLength."\"";

	// javaScript
	$js = "";
	$js = " onKeyUp=\"formataValor(this);\" ";	
	$js .= $this->js;	

	$this->_code .= $js;
	// disabled
	if ( $this->disabled == true ) $this->_code .= " DISABLED=true ";

	//style
	$this->_code .= " STYLE='{text-align: ".$this->_align."; ".$bgcolor."}'> ";	

	// obs
	$this->_code .= " ".$this->obs."\n";

	return $this->_code;
}

function Generate()
{
	echo $this->getCode();
}
}

class  textEditor
{
var $nome;
var $value;
var $rows;
var $cols;
var $disabled;
var $_code;
var $descriptor;
var $jsp;

function textEditor($nome, $value, $rows='15', $cols='80', $disabled = false, $jsp='')
{
	GLOBAL $SISCONF;
	GLOBAL $SGU_INTERNET;
	
	if ( $SGU_INTERNET == "SGU_INTERNET" ) {
		$ender = $SISCONF['PORTAL_PROF']['HOST']."editors/tinymce/jscripts/tiny_mce/tiny_mce.js";
	} else {
		$ender = $SISCONF['SIS']['COMUM']['HOST']."/portal/modulos/editors/tinymce/jscripts/tiny_mce/tiny_mce.js";
	}
	$this->descriptor = "function textEditor(\$nome, \$value, \$rows, \$cols, \$disabled, \$jsp)";
	$this->nome = $nome;
	$this->value = $value;
	$this->rows = $rows;
	$this->cols = $cols;
	$this->disabled = $disabled;
	$this->jsp = "<script language=\"javascript\" type=\"text/javascript\" src=\"".$ender."\"></script>";
	if (trim($jsp) == "") {
		$this->jsp .= "<script language='javascript' type='text/javascript'>
		tinyMCE.init({
			mode : 'exact',
			elements : '".$this->nome."',
			theme : 'advanced',
			plugins : 'spellchecker,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,insertdatetime,preview,zoom,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,filemanager,imagemanager',
			theme_advanced_buttons1_add_before : 'save,newdocument,separator',
			theme_advanced_buttons1_add : 'fontselect,fontsizeselect',
			theme_advanced_buttons2_add : 'separator,insertdate,inserttime,preview,separator,forecolor,backcolor',
			theme_advanced_buttons2_add_before: 'cut,copy,paste,pastetext,pasteword,separator,search,replace,separator',
			theme_advanced_buttons3_add_before : 'tablecontrols,separator',
			theme_advanced_buttons3_add : 'emotions,iespell,media,advhr,separator,print,separator,ltr,rtl,separator,fullscreen',
			theme_advanced_buttons4 : 'insertlayer,moveforward,movebackward,absolute,|,styleprops,|,spellchecker,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,|,insertfile,insertimage',
			theme_advanced_toolbar_location : 'top',
			theme_advanced_toolbar_align : 'left',
			theme_advanced_path_location : 'bottom',
			plugin_insertdate_dateFormat : '%Y-%m-%d',
			plugin_insertdate_timeFormat : '%H:%M:%S',
			extended_valid_elements : 'hr[class|width|size|noshade],font[face|size|color|style],span[class|align|style],p[lang]',
			external_link_list_url : 'example_data/example_link_list.js',
			external_image_list_url : 'example_data/example_image_list.js',
			flash_external_list_url : 'example_data/example_flash_list.js',
			template_external_list_url : 'example_data/example_template_list.js',
			file_browser_callback : 'mcFileManager.filebrowserCallBack',
			theme_advanced_resize_horizontal : false,
			theme_advanced_resizing : true,
			apply_source_formatting : true,
			gecko_spellcheck : true,
			spellchecker_languages : 'English=en,Danish=da,Dutch=nl,Finnish=fi,French=fr,German=de,Italian=it,Polish=pl,+Portuguese=pt,Spanish=es,Swedish=sv'
		});
		</script>";
	} else {
		$this->jsp .= $jsp;
	}
	$this->_code = "";

	if ($this->disabled === true) {
		 $this->disabled = "disabled";
	}
}

function getCode()
{
	$this->_code = "
	<table border='0' width='100%'>
	<tr><td>
		".$this->jsp."
		<textarea id=\"i_".$this->nome."\" name=\"".$this->nome."\" rows=\"".$this->rows."\" cols=\"".$this->cols."\" style='width:100%'>$this->value</textarea>
	</td></tr>
	</table>";
	return $this->_code;
}

function Generate()
{
	echo $this->getCode();
}

function getDescriptor()
{
	return $this->descriptor;
}
}
class newTextEditor
{
var $nome;
var $nomeHidden;
var $value;
var $rows;
var $cols;
var $disabled;
var $_code;
var $descriptor;
var $jsp;
var $action;

function newTextEditor($nomeHidden,$nome,$value, $rows='15', $cols='80', $disabled = false, $jsp='' , $action="")
{
	GLOBAL $PHP_SELF;
	GLOBAL $SISCONF;
	#dump($_SESSION);exit;
	GLOBAL $SGU_INTERNET;
	

	
	$this->descriptor = "function newTextEditor(\$nome, \$value, \$rows, \$cols, \$disabled, \$jsp)";
	$this->nomeHidden = $nomeHidden;
	$this->nome = $nome;
	$this->value = $value;
	$this->rows = $rows;
	$this->cols = $cols;
	$this->disabled = $disabled;
	$this->action = $action;
	
	if ( $SGU_INTERNET == "SGU_INTERNET" ) {
		$caminhoEditor = $SISCONF['PORTAL_PROF']['PATH_EDITOR_INNOVA'];
	}else{
		$caminhoEditor = $SISCONF['SIS']['INTRANET']['PATH_EDITOR_INNOVA']."";
	}	
	
	//Check user's Browser
	
	if(strpos($_SERVER["HTTP_USER_AGENT"],"MSIE")) {
		echo "<script language=JavaScript src='".$caminhoEditor."scripts/editor.js'></script>";
	}else{
		echo "<script language=JavaScript src='".$caminhoEditor."scripts/moz/editor.js'></script>";
	}
	$this->jsp = "
			<script language=\"javascript\" src=\"includes/js/menu.js\"></script>
			<script language=\"javascript\" src=\"includes/js/scripts.js\"></script>
			<script language=JavaScript src='editor/scripts/moz/editor.js'></script>	"
			;
}

function getCode()
{

$valor = $this->value;
$valor = html_entity_decode($valor);

//$valor = str_replace('"','',$valor);
$valor = str_replace("'",'',$valor);
$valor = str_replace(array("\r\n", "\r\n", "\n"), ' ', $valor);
$valor = trim($valor);
#DUMP($valor);
$this->_code =" 
	<div id=\"".$this->nome."\">  
	
			<pre id=\"idTemporary\" name=\"idTemporary\" style=\"display:none\"></pre>
				<script language=\"JavaScript\" type=\"text/javascript\">

					var ".$this->nome." = new InnovaEditor(\"".$this->nome."\");

					".$this->nome.".css=\"componentes/css/padrao.css\";
					
					".$this->nome.".btnStyles=true;
					

					".$this->nome.".width=\"100%\";
					".$this->nome.".height=450;

					".$this->nome.".features=[
						\"Undo\",\"Redo\",\"HTMLSource\",\"PasteWord\",\"|\",
						\"Table\",\"Guidelines\",\"|\",\"Characters\",\"Line\",\"Clean\",\"ClearAll\",\"BRK\",
						\"JustifyLeft\",\"JustifyCenter\",\"JustifyRight\",\"JustifyFull\",\"|\",\"Numbering\",\"Bullets\",\"|\",\"Indent\",\"Outdent\",\"|\",
						\"Hyperlink\"/*,\"Image\",\"Flash\",\"Media\"*/,\"BRK\",
						\"Paragraph\",\"FontName\",\"FontSize\",\"|\",\"ForeColor\",\"BackColor\",\"Bold\",\"Italic\",
						\"Underline\",\"Strikethrough\",\"|\",\"Superscript\",\"Subscript\",\"|\",
						\"StyleAndFormatting\",\"TextFormatting\",\"ListFormatting\",\"BoxFormatting\",\"ParagraphFormatting\"
					];
					 
					".$this->nome.".cmdAssetManager=\"modalDialogShow('',640,465)\";

					".$this->nome.".onSave = new Function(\"submitForm()\");

					".$this->nome.".cmdInternalLink = \"modelessDialogShow('links.htm',365,270)\";
					".$this->nome.".cmdCustomObject = \"modelessDialogShow('objects.htm',365,270)\";
					
					var texto='$valor';
					".$this->nome.".RENDER(texto);
				
				</script>
					<input type=\"hidden\" name=".$this->nomeHidden." id=".$this->nomeHidden." >
	</div>
	
	";
	return $this->_code;
}

function Generate()
{
	echo $this->getCode();
}

function getDescriptor()
{
	return $this->descriptor;
}

}




?>
