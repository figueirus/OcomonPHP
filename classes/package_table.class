<?phpclass tabela {	//Propriedades públicas	//Propriedades privadas	var $objQuery;          //OBJECT:  Objetod e query passado por Referência	var $tableProperties;  /*ARRAY:   Define as configurações da tabela								$this->table_properties = array(									  'TITULO' => STRING,                 //Título do Relatório									  'MOSTRAR_BORDA' => true/false,      //Exibe uma borda em torno da tabela (default true)									  'MOSTRAR_GRADE' => true/false,      //Exibe as linhas de grade           (default true)             									  'CONTROLE_NIVEL' => integer,        //Controle de Níveis de Exibição colunar, da esquerda p/direita   (default 0)									  'NUMERADOR' => left/right/both/no,  //Implementa contador de registros na lateral Esquerda, Direita, Ambos ou Desabilitado(default)									  'ALINHAMENTO' => left/right/center, //Alinhamento da Tabela (default left)									  'LEFT_MARGIN' => 1/2/3/4/5          //Define o alinhamento lateral Esquerdo em BlockQuotes									  'STYLE' => SP_STORED / MP_STORED / SP / MP									  )							*/	var $colsProperties;	/*ARRAY:   Recebe os título e estilos definidos para cada coluna								$this->cols_properties[$i] =  array(									  'TYPE'=>'FIELD / BUTTON' defalt(FIELD),									  'FIELD'= array('TITULO'=>'xxx', 'NOMESQL'=>'xxx',									  'BUTTON'= 'NO / ADDBTN / DELBTN / UPDBTN / NEWBTN' default(NO) 									  'LARGURA'=>'AUTO/99%/999' (default AUTO),									  'ALINHAMENTO'=>'LEFT/RIGHT/CENTER/JUSTIFY', (default left) 									  'TITULO_NEGRITO'=>true/false,               (default true)									  'TITULO_ITALICO'=>true/false,               (default false) 									  'REGISTRO_NEGRITO'=>true/false,             (default false)									  'REGISTRO_ITALICO'=>true/false,             (default false)									  'CALCULO'=>'SUM/AVG/COUNT/NO',              (default NO)									  'OPERACAO'=>'MOD11BB/									  * 		(ATRASO,DD/MM/YYYY)/									  * 		(MULTA,DD/MM/YYYY)/									  * 		(JUROS,DD/MM/YYYY)/									  * 		(CORRECAO,DD/MM/YYYY)/									  * 		NO								  (default NO) 									  'PAGINA_LINK' => 'http_address',            (default empty)										  'PAGINA_LINK_PARAMETROS_FIXOS' => array('PARAMETRO_NOME'=>'PARAMETRO_VALOR'), (default empty)										  'PAGINA_LINK_PARAMETROS_DINAMICOS' => array('PARAMETRO_NOME'=>'NOMESQL')	(default empty)									  'PAGINA_LINK_NOVA_JANELA' => 									  * 	array(bool Active, int PosX, int PoxY, int Width, int Height, bool Resizeable, bool Scrollbars) 									  *     defaults (FALSE  ,    0    ,     0   ,     780  ,     570   ,      TRUE      ,     TRUE       )									  'COR_FUNDO' => #hexa,       //Cor do Fundo da célula específica 									  'COR_FONTE' => #hexa,       //Cor da Fonte da célula específica									  )							*/    var $themeProperties;   /*ARRAY:   Recebe os título e estilos definidos para cada coluna								$this->cols_properties[$i] =  array(									  'BORDA_COR' => #hexa,          //Cor da Borda da tabela									  'BORDA_ESPESSURA' => integer,  //Borda da tabela (default 1)									  'TABELA_FUNDO' => #hexa,       //Cor do Fundo da tabela e linhas de grade									  'TITULO_FUNDO' => #hexa,       //Cor do Fundo da título									  'TITULO_FONTE' => #hexa,       //Cor da Fonte da título									  'EFEITO_ZEBRADO' => true/false, //            (default false)									  'REGISTRO_FUNDO' => #hexa,     //Cor do Fundo dos registros									  'REGISTRO_FONTE' => #hexa,     //Cor da Fonte dos registros									  'REGISTRO_FUNDO2' => #hexa,     //Cor do Fundo dos registros sombreado									  'REGISTRO_FONTE2' => #hexa,     //Cor da Fonte dos registros sombreado									  )							*/	var $mensagemRetorno;		var $width;	var $num_par;		//Propriedades de Retorno	var $_error_quantity;	var $_error_description;	//Constructor da classe. 	//Seta as propriedades com valores padrões	function tabela(){		$this->_error_quantity = 0;		$this->_error_description = array();		$this->tableProperties = array();		$this->setTabelaProperties();			}	function setTabelaProperties($titulo = '', 			$mostraBorda = true, 			$mostraGrade = true,			$controleNivel = 0,			$mostraNumerador = 'NO',			$alinhamento = 'LEFT',			$margemEsquerda = 0,			$estilo = 'MP_STORED'			){		$this->setTabelaTitulo($titulo);		$this->setTabelaMostrarBorda($mostraBorda);		$this->setTabelaMostrarGrade($mostraGrade);		$this->setTabelaControleNivel($controleNivel);		$this->setTabelaMostraNumerador($mostraNumerador);		$this->setTabelaAlinhamento($alinhamento);		$this->setTabelaMargemEsquerda($margemEsquerda);		$this->setTabelaEstilo($estilo);	}	function getNovoIndiceColuna(){		return count($this->colsProperties);	}	function addColuna($tipo = 'FIELD', $nomeSQL, ){			$colsProperties;	/*ARRAY:   Recebe os título e estilos definidos para cada coluna								$this->cols_properties[$i] =  array(									  'TYPE'=>'FIELD / BUTTON' defalt(FIELD),									  'FIELD'= array('TITULO'=>'xxx', 'NOMESQL'=>'xxx',									  'BUTTON'= 'NO / ADDBTN / DELBTN / UPDBTN / NEWBTN' default(NO) 									  'LARGURA'=>'AUTO/99%/999' (default AUTO),									  'ALINHAMENTO'=>'LEFT/RIGHT/CENTER/JUSTIFY', (default left) 									  'TITULO_NEGRITO'=>true/false,               (default true)									  'TITULO_ITALICO'=>true/false,               (default false) 									  'REGISTRO_NEGRITO'=>true/false,             (default false)									  'REGISTRO_ITALICO'=>true/false,             (default false)									  'CALCULO'=>'SUM/AVG/COUNT/NO',              (default NO)									  'OPERACAO'=>'MOD11BB/									  * 		(ATRASO,DD/MM/YYYY)/									  * 		(MULTA,DD/MM/YYYY)/									  * 		(JUROS,DD/MM/YYYY)/									  * 		(CORRECAO,DD/MM/YYYY)/									  * 		NO								  (default NO) 									  'PAGINA_LINK' => 'http_address',            (default empty)										  'PAGINA_LINK_PARAMETROS_FIXOS' => array('PARAMETRO_NOME'=>'PARAMETRO_VALOR'), (default empty)										  'PAGINA_LINK_PARAMETROS_DINAMICOS' => array('PARAMETRO_NOME'=>'NOMESQL')	(default empty)									  'PAGINA_LINK_NOVA_JANELA' => 									  * 	array(bool Active, int PosX, int PoxY, int Width, int Height, bool Resizeable, bool Scrollbars) 									  *     defaults (FALSE  ,    0    ,     0   ,     780  ,     570   ,      TRUE      ,     TRUE       )									  'COR_FUNDO' => #hexa,       //Cor do Fundo da célula específica 									  'COR_FONTE' => #hexa,       //Cor da Fonte da célula específica									  )							*/	}		function setTabelaTitulo($titulo = ''){		$titulo = trim($titulo); 		$this->tableProperties['TITULO'] = $titulo; 	}	function setTabelaMostrarBorda($mostraBorda = true){		if (is_bool($mostraBorda)) {			$this->tableProperties['MOSTRAR_BORDA'] = $mostraBorda; 		}else{			$this->tableProperties['MOSTRAR_BORDA'] = true; 			$this->_addError("<B>Propriedades da Tabela:</B><BR>".				"Mostrar Borda deve ser <B>true / false</B> ( $mostraBorda ).");		}	}	function setTabelaMostrarGrade($mostraGrade = true){ 		if (is_bool($mostraGrade)) {			$this->tableProperties['MOSTRAR_GRADE'] = $mostraGrade; 		}else{			$this->tableProperties['MOSTRAR_GRADE'] = true; 			$this->_addError("<B>Propriedades da Tabela:</B><BR>".				"Mostrar Grade deve ser <B>true / false</B> ( $mostraGrade ).");		}	}	function setTabelaControleNivel($controleNivel = 0){		if (is_numeric($controleNivel)) {			$this->tableProperties['CONTROLE_NIVEL'] = $controleNivel; 		}else{			$this->_addError("<B>Propriedades da Tabela:</B><BR>".				"Controle de Nível não é um número válido ( $controleNivel ).");		} 	}	function setTabelaMostraNumerador( $mostraNumerador = 'NO' ){		$mostraNumerador = strtoupper($mostraNumerador);		switch($mostraNumerador){			case 'NO': $this->tableProperties['NUMERADOR'] = $mostraNumerador;	break;			case 'RIGHT': $this->tableProperties['NUMERADOR'] = $mostraNumerador; break;			case 'LEFT': $this->tableProperties['NUMERADOR'] = $mostraNumerador; break;			case 'BOTH': $this->tableProperties['NUMERADOR'] = $mostraNumerador; break;			default:				$this->_addError("<B>Propriedades da Tabela:</B><BR>".					"Mostrar Numerador deve ser <B>left/right/both/no</B> ( $mostraNumerador ).");		}	}		function setTabelaAlinhamento($alinhamento){		$alinhamento = strtoupper($alinhamento);		switch($alinhamento){			case 'CENTER': $this->tableProperties['ALINHAMENTO'] = $alinhamento; break;			case 'RIGHT':  $this->tableProperties['ALINHAMENTO'] = $alinhamento; break;			case 'LEFT': $this->tableProperties['ALINHAMENTO'] = $alinhamento; break;			default:				$this->_addError("<B>Propriedades da Tabela:</B><BR>".					"Alinhamento deve ser <B>left/right/center</B> ( $alinhamento ).");		}	}		function setTabelaMargemEsquerda($margemEsquerda){		if (is_numeric($margemEsquerda)) {			if (($margemEsquerda < 0) || ($margemEsquerda > 5)) {				$this->_addError("<B>Propriedades da Tabela:</B><BR>".					"Margem Esquerda não está nos limites <B>0 ~ 5</B> ( $margemEsquerda ).");			}else{				$this->tableProperties['LEFT_MARGIN'] = $margemEsquerda; 			}		}else{			$this->_addError("<B>Propriedades da Tabela:</B><BR>".				"Margem Esquerda não é um número válido ( $margemEsquerda ).");		} 	}		function setTabelaEstilo($estilo){		$estilo = strtoupper($estilo);		switch($estilo){			case 'SP_STORED': $this->tableProperties['STYLE'] = $estilo; break;			case 'MP_STORED': $this->tableProperties['STYLE'] = $estilo; break;			case 'SP': $this->tableProperties['STYLE'] = $estilo; break;			case 'MP': $this->tableProperties['STYLE'] = $estilo; break;			default:				$this->_addError("<B>Propriedades da Tabela:</B><BR>".					"Estilo não está corretamente definido ( $estilo ):<BR>".					" -- <B>SP_STORED</B>: Página Simples, armazenada.<BR>".					" -- <B>MP_STORED</B>: Páginas Múltiplas, armazenadas.<BR>".					" -- <B>SP</B>: Página Simples, não armazenada.<BR>".					" -- <B>MP</B>: Páginas Múltiplas, não armazenadas.");		}	}			function _addError($error = ''){		if (trim($error) != '') {			$this->_error_quantity +=1;			array_push($this->_error_description, $error);		}	}	function _showErrors(){		$err = count($this->_error_description);		if ($err > 0) {			$retorno = true;			echo "<TABLE ALIGN=CENTER BORDER=0 BGCOLOR=FB3D11 CELLSPACING=2 CELLPADDING=2>";			echo "<TR><TD ALIGN=CENTER><FONT COLOR=FFFFFF><B>Classe TABELA: Erros foram encontrados:</B></FONT></TD></TR>";			for ( $i = 0; $i < $err ; $i++ ){				echo "<TR><TD ALIGN=LEFT BGCOLOR=EFFDAC>".$this->_error_description[$i]."</TD></TR>";			}			echo "</TABLE>";		}else{			$retorno = false;		}		return $retorno;	}		function geraTabela(){		if ($this->_showErrors()) {return false;}				$tabela = "<TABLE BORDER=10><TR><TD>TESTE</TD></TR></TABLE>";		echo "$tabela";	}	}?>